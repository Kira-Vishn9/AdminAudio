import React, { useEffect } from 'react'import { getSongs } from '@/module/song/song.service.ts'import { type ISong } from '@/module/song/song.model.ts'import { SongTable } from '@/module/song/components/Table/Table.tsx'import { PaginationControlled } from '../dependencies.ts'import { type SongDtoRequest } from '@/module/song/song.dto.ts'import Snackbars from '@/components/SnackBar/SnackBar.tsx'const Songs = (): React.JSX.Element => {  const [songs, setSongsResp] = React.useState<ISong[]>([])  const [page, setPage] = React.useState(1)  const [inputValue, setInputValue] = React.useState('')  const [open, setOpen] = React.useState(false)  const handleChange = (event: React.ChangeEvent<unknown>, value: number): void => {    setPage(value)    console.log(event)  }  useEffect(() => {    const params: SongDtoRequest = {      params: {        page,        count: 25      }    }    getSongs(params)      .then((res) => { setSongsResp(res.songs) })      .catch(() => { setOpen(true) })    console.log(songs)  }, [page, inputValue])  return (    <>      {open ? <Snackbars /> : ''}      <SongTable songs={songs} setInputValue={setInputValue}/>      <PaginationControlled page={page} onChange={handleChange}/>    </>  )}export default Songs